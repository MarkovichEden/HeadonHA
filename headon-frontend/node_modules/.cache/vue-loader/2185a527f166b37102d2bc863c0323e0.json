{"remainingRequest":"/home/marko/projects/headon-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/marko/projects/headon-frontend/src/components/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/marko/projects/headon-frontend/src/components/Login.vue","mtime":1619268989665},{"path":"/home/marko/projects/headon-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/marko/projects/headon-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/marko/projects/headon-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/marko/projects/headon-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBWdWUgZnJvbSAnQC9BcHAudnVlJwppbXBvcnQge2xvZ2luU2VydmljZX0gZnJvbSAnLi4vaGVscGVycycKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdMb2dpbicsCiAgICBkYXRhOiAoKSA9PiAoewogICAgICAgIHZhbGlkOiBmYWxzZSwKICAgICAgICB1c2VybmFtZTogJycsCiAgICAgICAgbmFtZVJ1bGVzOiBbCiAgICAgICAgICAgIHYgPT4gISF2IHx8ICdVc2VyIG5hbWUgaXMgcmVxdWlyZWQnLAogICAgICAgIF0sCiAgICAgICAgcGFzc3dvcmQ6ICcnLAogICAgICAgIHBhc3N3b3JkUnVsZXM6IFsKICAgICAgICAgICAgdiA9PiAhIXYgfHwgJ1Bhc3N3b3JkIGlzIHJlcXVpcmVkJywKICAgICAgICBdLAogICAgfSksCgogICAgbWV0aG9kczogewogICAgICAgIHZhbGlkYXRlKCkgewogICAgICAgICAgICBpZiAodGhpcy5uYW1lUnVsZXNbMF0odGhpcy51c2VybmFtZSkgJiYgdGhpcy5wYXNzd29yZFJ1bGVzWzBdKHRoaXMucGFzc3dvcmQpKSB7CiAgICAgICAgICAgICAgICBsb2dpblNlcnZpY2UubG9naW4odGhpcy51c2VybmFtZSwgdGhpcy5wYXNzd29yZCkKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGFsZXJ0KCJpbnZhbGlkIikKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgcmVzZXQoKSB7CiAgICAgICAgICAgIHRoaXMuJHJlZnMuZm9ybS5yZXNldCgpCiAgICAgICAgfSwKICAgICAgICByZXNldFZhbGlkYXRpb24oKSB7CiAgICAgICAgICAgIHRoaXMuJHJlZnMuZm9ybS5yZXNldFZhbGlkYXRpb24oKQogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container>\n      <v-form ref=\"form\" v-model=\"valid\" lazy-validation method=\"get\">\n          <v-text-field\n            v-model=\"username\"\n            :rules=\"nameRules\"\n            label=\"User Name\"\n            required\n            ></v-text-field>\n            <v-text-field\n            v-model=\"password\"\n            :rules=\"passwordRules\"\n            label=\"Password\"\n            required\n            type=\"password\"\n        ></v-text-field>\n        <v-btn\n            :disabled=\"!valid\"\n            color=\"success\"\n            class=\"mr-4\"\n            @click=\"validate\"\n        >\n        Login\n        </v-btn>\n\n        <v-btn\n            color=\"error\"\n            class=\"mr-4\"\n            @click=\"reset\"\n        >\n        Reset\n        </v-btn>\n\n        <v-btn\n            color=\"warning\"\n            @click=\"resetValidation\"\n        >\n        Reset Validation\n        </v-btn>\n      </v-form>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Vue from '@/App.vue'\nimport {loginService} from '../helpers'\n\nexport default {\n    name: 'Login',\n    data: () => ({\n        valid: false,\n        username: '',\n        nameRules: [\n            v => !!v || 'User name is required',\n        ],\n        password: '',\n        passwordRules: [\n            v => !!v || 'Password is required',\n        ],\n    }),\n\n    methods: {\n        validate() {\n            if (this.nameRules[0](this.username) && this.passwordRules[0](this.password)) {\n                loginService.login(this.username, this.password)\n            } else {\n                alert(\"invalid\")\n            }\n        },\n        reset() {\n            this.$refs.form.reset()\n        },\n        resetValidation() {\n            this.$refs.form.resetValidation()\n        }\n    }\n}\n</script>\n\n<style>\n\n</style>"]}]}